#!/usr/bin/ruby

require 'pathname'
require 'onlinestatus'
require 'json'
require 'net/http'

verbose = true
xosd = false
report_dead_stderr = true

until ARGV.empty?
	case ARGV.shift
		when "--quiet"
			verbose = false
		when "--no-report-dead-stderr"
			report_dead_stderr = false
		when "--xosd"
			xosd = true
		else
			raise "Invalid argument"
	end
end

unless OnlineStatus.online?
	if verbose
		STDERR.puts "We are offline, cannot check workers."
	end

	exit 0
end

token_path = Pathname.new("~/.mining-bitcoin-cz-token").expand_path
token = File.read(token_path).strip
url = "https://mining.bitcoin.cz/accounts/profile/json/#{token}"
response = Net::HTTP::get_response(URI.parse(url)).body
json = JSON.parse(response)

ok = true
json["workers"].each do |key, w|
	diff = Time.now - Time.at(w["last_share"])
	alive = w["alive"] && (diff.abs < 5*60) # 5 minutes

	unless alive
		msg = "Worker #{key} is dead!" 
		STDERR.puts msg if report_dead_stderr
		if xosd
			system("xosdutilctl", "echo", msg)
		end
		ok = false
	end
end

if verbose
	if ok
		msg = "All workers (#{json["workers"].keys.join(', ')}) are alive and well."
		puts msg

		if xosd
			system("xosdutilctl", "echo", msg)
		end
	end
end

exit (ok ? 0 : 1)
