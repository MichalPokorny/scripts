#!/usr/bin/ruby -w

require 'open3'

DEVICE="/dev/disk/by-uuid/c22c406b-029d-469a-9536-45916e529f22"

def die(*args)
	STDERR.puts(*args)
	exit 1
end

if Process.euid != 0
	exec "sudo", "cryptomount", *ARGV
	die "exec failed!"
end

def passphrase_ok?(passphrase)
	command = "cryptsetup --key-file - --test-passphrase luksOpen #{DEVICE} crypto"
	Open3.popen3(command) do |stdin, stdout, stderr, wait_thr|
		stdin.write passphrase
		stdin.close

		case wait_thr.value.exitstatus
		when 0
			return true
		when 2
			return false
		else
			STDERR.puts "Unexpected cryptsetup return code: #{wait_thr.value.exitstatus}"
			puts stdout.read
			puts stderr.read
			raise
		end
	end
end

def activate_crypto(passphrase)
	Open3.popen3("cryptsetup --key-file - luksOpen #{DEVICE} crypto") do |stdin, stdout, stderr, wait_thr|
		stdin.write passphrase
		stdin.close
		raise unless wait_thr.value.exitstatus == 0
	end
end

def crypto_active?
	`cryptsetup status crypto` !~ / is inactive\./
end

if ARGV.shift == "--is-mounted"
	exit crypto_active? ? 0 : 1
end

require 'highline'
if crypto_active?
	puts "crypto mapping already active."
else
	passphrase = nil
	loop do
		passphrase = HighLine.ask("Password? ") { |q|
			q.echo = "*" # false
		}
		break if passphrase_ok?(passphrase)
		puts "Sorry, try again."
	end

	activate_crypto passphrase
end

@mounted_dirs = `mount`.lines.select { |line| line =~ %r{/dev/mapper/crypto} }.map { |line|
	raise unless line =~ /\A(.+) on (.+) type (.+) \(.+\)\Z/
	$2
}

unless @mounted_dirs.include? "/mnt/crypto"
	puts "mounting /mnt/crypto"
	system "mount /dev/mapper/crypto /mnt/crypto"
end

puts "starting mail services"
system "su prvak -c fetchmail"
system "systemctl start postfix"
