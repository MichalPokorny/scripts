#!/usr/bin/ruby -w

def die(*args)
	STDERR.puts(*args) unless args.empty?
	if @restart_smtp
		system "systemctl start postfix"
	end
	exit 1
end

if Process.euid != 0
	exec "sudo", "cryptounmount", *ARGV
	die "exec failed!"
end

must_unmount = true

until ARGV.empty?
	case ARGV.shift
	when "--just-try"
		must_unmount = false
	end
end

if !File.exist?("/dev/mapper/crypto")
	STDERR.puts "Already unmounted."
	exit 0
end

@restart_smtp = false

system "systemctl stop postfix"
@restart_smtp = true # Not likely interruptible...

system "killall fetchmail"

output = `lsof -F pc /dev/mapper/crypto`.strip
unless output.empty?
	pids = []
	require 'set'
	commands = Set.new
	output.lines.each do |line|
		case line[0]
		when 'p'
			pids << line[1...line.length].strip.to_i
		when 'c'
			commands << line[1...line.length].strip
		else raise
		end
	end
	message = "There #{pids.size > 1 ? "are" : "is"} #{pids.size} user#{pids.size > 1 ? "s" : ""} of crypto (#{commands.to_a.join(', ')}). Cannot unmount."
	if must_unmount
		die message
	else
		puts message
		die
	end
end


# TODO: assert completion.
system "umount -A /dev/mapper/crypto"
system "cryptsetup luksClose crypto"
